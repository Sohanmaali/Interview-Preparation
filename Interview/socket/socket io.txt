What is Socket.IO, and how does it work?
Ans -> Socket.IO is a JavaScript library that enables real-time, bi-directional communication between the client and server.

It works over WebSockets but also provides fallback options (like long polling) when WebSockets are not available.

------------------------------------------------------------------------------------------------------------------

What is the difference between WebSockets and Socket.IO?
Ans -> WebSockets (Native)
Protocol: A browser API/protocol (ws://)
Low-level: You manually manage connection, reconnection, message format, etc.
No built-in features like rooms, broadcasting, etc.
No fallback â€“ if WebSocket fails, connection is lost.
Works only over WebSocket-supported networks.

âœ… Socket.IO
Library built on top of WebSockets (and other transports like polling).
High-level: Comes with many built-in features:
Automatic reconnection
Broadcasting
Rooms & namespaces
Event-based communication
Fallbacks (polling if WebSocket fails)

------------------------------------------------------------------------------------------------------------------

How do you install and set up Socket.IO in a Node.js application?
------------------------------------------------------------------------------------------------------------------

Explain the basic flow of a Socket.IO connection.
------------------------------------------------------------------------------------------------------------------

What are events in Socket.IO, and how do you emit and listen for them?
Ans -> Events are custom names used to send and receive data between client and server.
Socket.IO uses an event-driven model, just like addEventListener in browsers.
------------------------------------------------------------------------------------------------------------------

How do you send and receive messages using Socket.IO?
------------------------------------------------------------------------------------------------------------------

What are namespaces in Socket.IO, and why are they used?
Ans -> Namespaces are separate communication channels on the same Socket.IO server.

They allow you to split the connection into multiple logical endpoints.

Each namespace has its own event handlers and clients.

âœ… Why use Namespaces?
To organize your code and separate concerns.

To reduce unnecessary data sent to clients who donâ€™t need it.

To manage different parts of an app independently (e.g., /chat, /news).

------------------------------------------------------------------------------------------------------------------

What are rooms in Socket.IO? How do they differ from namespaces?
------------------------------------------------------------------------------------------------------------------

How do you disconnect a client from a Socket.IO server?
------------------------------------------------------------------------------------------------------------------

What are the transport methods used by Socket.IO?
------------------------------------------------------------------------------------------------------------------
server side events?
------------------------------------------------------------------------------------------------------------------
client side events?
------------------------------------------------------------------------------------------------------------------
what is namespaces in socket io?
------------------------------------------------------------------------------------------------------------------
how to create or use namespaces?
------------------------------------------------------------------------------------------------------------------
What are Events?
------------------------------------------------------------------------------------------------------------------
What are the pre reserved events of socket io?
------------------------------------------------------------------------------------------------------------------
how to create a custome event?
------------------------------------------------------------------------------------------------------------------ 

ðŸ”¹ Intermediate-Level Questions
How do you broadcast a message to all connected clients?
------------------------------------------------------------------------------------------------------------------

How can you send a message to specific clients using Socket.IO?
------------------------------------------------------------------------------------------------------------------

Explain the difference between:

socket.emit()

socket.broadcast.emit()

io.emit()

io.to(room).emit()
------------------------------------------------------------------------------------------------------------------

How can you handle reconnections in Socket.IO?
------------------------------------------------------------------------------------------------------------------

How do you implement error handling in Socket.IO?
------------------------------------------------------------------------------------------------------------------

How can you pass data when a user connects to a Socket.IO server?
------------------------------------------------------------------------------------------------------------------

How do you authenticate a user before allowing a Socket.IO connection?
------------------------------------------------------------------------------------------------------------------

How do you store and manage user sessions in a Socket.IO application?
------------------------------------------------------------------------------------------------------------------

How do you implement middleware in Socket.IO?
------------------------------------------------------------------------------------------------------------------

Can Socket.IO be used with a React or Angular frontend? How?
------------------------------------------------------------------------------------------------------------------

ðŸ”¹ Advanced-Level Questions
How do you scale a Socket.IO application across multiple servers?
------------------------------------------------------------------------------------------------------------------

What is Socket.IO Redis Adapter, and when do you need it?
------------------------------------------------------------------------------------------------------------------

How do you prevent memory leaks in a Socket.IO server?
------------------------------------------------------------------------------------------------------------------

How does Socket.IO handle backpressure when there are too many messages?
------------------------------------------------------------------------------------------------------------------

How do you implement rate limiting in a Socket.IO application?
------------------------------------------------------------------------------------------------------------------

What are some security best practices for using Socket.IO?
------------------------------------------------------------------------------------------------------------------

How can you integrate Socket.IO with JWT authentication?
------------------------------------------------------------------------------------------------------------------

How does Socket.IO work with HTTPS and SSL?
------------------------------------------------------------------------------------------------------------------

How do you debug a Socket.IO connection issue?
------------------------------------------------------------------------------------------------------------------

What are some alternatives to Socket.IO, and when would you use them?
------------------------------------------------------------------------------------------------------------------
